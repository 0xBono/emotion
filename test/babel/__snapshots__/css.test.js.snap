// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel css extract basic object support 1`] = `
"css({
  display: ['-webkit-box', '-ms-flexbox', 'flex']
});"
`;

exports[`babel css extract composes 1`] = `
"import './css.test.emotion.css';

const cls1 = 'css-cls1-1q8jsgx';
const cls2 = css([['one-class', 'another-class', cls1]], ['center'], function createEmotionStyledRules(x0) {
  return [{
    'WebkitJustifyContent': 'center',
    'msFlexPack': 'center',
    'WebkitBoxPack': 'center',
    'justifyContent': 'center',
    'WebkitAlignItems': x0,
    'msFlexAlign': x0,
    'WebkitBoxAlign': x0,
    'alignItems': x0
  }];
});"
`;

exports[`babel css extract composes 2`] = `
".css-cls1-1q8jsgx {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex
}"
`;

exports[`babel css extract composes no dynamic 1`] = `
"import './css.test.emotion.css';

const cls1 = 'css-cls1-1q8jsgx';
const cls2 = css(['one-class', 'another-class', cls1], [], function createEmotionStyledRules() {
  return [{
    'WebkitJustifyContent': 'center',
    'msFlexPack': 'center',
    'WebkitBoxPack': 'center',
    'justifyContent': 'center',
    'WebkitAlignItems': 'center',
    'msFlexAlign': 'center',
    'WebkitBoxAlign': 'center',
    'alignItems': 'center'
  }];
});"
`;

exports[`babel css extract composes no dynamic 2`] = `
".css-cls1-1q8jsgx {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex
}"
`;

exports[`babel css extract composes with objects 1`] = `
"
const cls1 = css({
  display: ['-webkit-box', '-ms-flexbox', 'flex']
});
const cls2 = css([cls1], [], function createEmotionStyledRules() {
  return [{
    'height': '20',
    'WebkitJustifyContent': 'center',
    'msFlexPack': 'center',
    'WebkitBoxPack': 'center',
    'justifyContent': 'center'
  }];
});"
`;

exports[`babel css extract composes with objects 2`] = `
".css-cls1-1q8jsgx {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex
}"
`;

exports[`babel css extract css basic 1`] = `
"import \\"./css.test.emotion.css\\";

\\"css-153l48f\\";"
`;

exports[`babel css extract css basic 2`] = `
".css-153l48f {
    margin: 12px 48px;
    color: #ffffff;
    color: blue;
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto
}"
`;

exports[`babel css extract prefixed array of objects 1`] = `
"
css([{
  borderRadius: '50%',
  WebkitBoxSizing: 'border-box',
  boxSizing: 'border-box',
  display: ['-webkit-box', '-ms-flexbox', 'flex'],
  ':hover': {
    WebkitTransform: 'scale(1.2)',
    transform: 'scale(1.2)'
  }
}, {
  WebkitTransition: '-webkit-transform 400ms ease-in-out',
  transition: ['-webkit-transform 400ms ease-in-out', 'transform 400ms ease-in-out', 'transform 400ms ease-in-out, -webkit-transform 400ms ease-in-out']
}]);"
`;

exports[`babel css extract prefixed objects 1`] = `
"
css({
    borderRadius: '50%',
    WebkitTransition: '-webkit-transform 400ms ease-in-out',
    transition: ['-webkit-transform 400ms ease-in-out', 'transform 400ms ease-in-out', 'transform 400ms ease-in-out, -webkit-transform 400ms ease-in-out'],
    WebkitBoxSizing: 'border-box',
    boxSizing: 'border-box',
    display: ['-webkit-box', '-ms-flexbox', 'flex'],
    ':hover': {
        WebkitTransform: 'scale(1.2)',
        transform: 'scale(1.2)'
    }
});"
`;

exports[`babel css inline composes 1`] = `
"
const cls1 = css([], [], function createEmotionStyledRules() {
  return [{
    'display': ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex']
  }];
});
const cls2 = css(['one-class', 'another-class', cls1], ['center'], function createEmotionStyledRules(x0) {
  return [{
    'WebkitJustifyContent': 'center',
    'msFlexPack': 'center',
    'WebkitBoxPack': 'center',
    'justifyContent': 'center',
    'WebkitAlignItems': x0,
    'msFlexAlign': x0,
    'WebkitBoxAlign': x0,
    'alignItems': x0
  }];
});"
`;

exports[`babel css inline css basic 1`] = `
"
css([], [widthVar], function createEmotionStyledRules(x0) {
        return [{
                \\"margin\\": \\"12px 48px\\",
                \\"color\\": [\\"#ffffff\\", \\"blue\\"],
                \\"display\\": [\\"-webkit-box\\", \\"-moz-box\\", \\"-ms-flexbox\\", \\"-webkit-flex\\", \\"flex\\"],
                \\"WebkitFlex\\": \\"1 0 auto\\",
                \\"msFlex\\": \\"1 0 auto\\",
                \\"flex\\": \\"1 0 auto\\",
                \\"width\\": x0
        }];
});"
`;

exports[`babel css inline interpolation in selector 1`] = `
"
const cls2 = css([], [className], function createEmotionStyledRules(x0) {
  return [{
    \\"margin\\": \\"12px 48px\\",
    \\"color\\": \\"#ffffff\\",
    [\`.\${x0}\`]: {
      \\"display\\": \\"none\\"
    }
  }];
});"
`;

exports[`babel css inline lots of composes 1`] = `
"
const cls2 = css(['one-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class', 'another-class'], ['center'], function createEmotionStyledRules(x0) {
  return [{
    'WebkitJustifyContent': 'center',
    'msFlexPack': 'center',
    'WebkitBoxPack': 'center',
    'justifyContent': 'center',
    'WebkitAlignItems': x0,
    'msFlexAlign': x0,
    'WebkitBoxAlign': x0,
    'alignItems': x0
  }];
});"
`;

exports[`babel css inline only composes 1`] = `
"
const cls1 = css([], [], function createEmotionStyledRules() {
  return [{
    'display': ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex']
  }];
});
const cls2 = css(['one-class', 'another-class', cls1], [], function createEmotionStyledRules() {
  return [{}];
});"
`;

exports[`babel css inline only styles on nested selector 1`] = `
"
const cls1 = css([], [], function createEmotionStyledRules() {
  return [{
    \\"display\\": [\\"-webkit-box\\", \\"-moz-box\\", \\"-ms-flexbox\\", \\"-webkit-flex\\", \\"flex\\"]
  }];
});
const cls2 = css([], [], function createEmotionStyledRules() {
  return [{
    \\"&:hover\\": {
      \\"background\\": \\"pink\\"
    }
  }];
});"
`;

exports[`babel css inline throws correct error when composes is not the first rule 1`] = `"unknown: Error: composes must be the first rule"`;

exports[`babel css inline throws correct error when composes is on a nested selector 1`] = `"unknown: Error: composes cannot be on nested selectors"`;

exports[`babel css inline throws correct error when the value of composes is not an interpolation 1`] = `"unknown: Error: composes must be a interpolation"`;
