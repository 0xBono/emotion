// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel css prop StringLiteral css prop value 1`] = `
"<div className={css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})}></div>;"
`;

exports[`babel css prop basic 1`] = `
"<div className={\\"a\\" + \\" \\" + css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})}></div>;"
`;

exports[`babel css prop basic 2`] = `".css-jf1v9l { color: brown; }"`;

exports[`babel css prop basic inline 1`] = `
"<div className={\\"a\\" + \\" \\" + css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})}></div>;"
`;

exports[`babel css prop className as expression 1`] = `
"<div className={variable + \\" \\" + css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})}></div>;"
`;

exports[`babel css prop className as expression string 1`] = `
"<div className={\`test__class\` + \\" \\" + css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})} this={\`hello\`}></div>;"
`;

exports[`babel css prop css empty 1`] = `
"<div className={css([], [], function createEmotionStyledRules() {
  return [{}];
})}></div>;"
`;

exports[`babel css prop dynamic inline 1`] = `
"<div className={\\"a\\" + \\" \\" + css([], [color], function createEmotionStyledRules(x0) {
  return [{
    \\"color\\": x0
  }];
})}></div>;"
`;

exports[`babel css prop emptyClassName 1`] = `
"<div className={\\"\\" + \\" \\" + css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})}></div>;"
`;

exports[`babel css prop no css attr 1`] = `"<div></div>;"`;

exports[`babel css prop noClassName 1`] = `
"<div className={css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})}></div>;"
`;

exports[`babel css prop with spread arg in jsx opening tag 1`] = `
"<div className={\\"a\\" + \\" \\" + css([], [], function createEmotionStyledRules() {
  return [{
    \\"color\\": \\"brown\\"
  }];
})} {...rest}></div>;"
`;
